export const projects = [
  {
    title: "Develogger(Front-End)",
    description:
      "[Blog Commnunity with Next.js + Zustand + react-query + Material-ui]\nGithub OAuth 로그인, Local Login 회원 가입을 통해 누구나 게시 할 수 있는 블로그 커뮤니티 프로젝트의 Front-End 영역 입니다.\n(진행중)",
    image: "/images/blog-Next.png",
    tags: [
      "Next.js",
      "Zustand",
      "react-query",
      "React.js",
      "TypeScript",
      "Material-ui",
      "Scss",
      "ESLint",
      "Git",
    ],
    github: "https://github.com/LKHcoding/Blog-NextJS",
    visit: "",
    notion:
      "https://www.notion.so/Blog-Project-4d0deabc42b741b18cd69bfe4f34c6d0",
    id: 0,
  },
  {
    title: "Develogger(Back-End)",
    description:
      "[Blog Commnunity with Nest.js + TypeOrm + mariaDB]\nGithub OAuth, Local Login(JWT 인증)을 통해 누구나 게시 할 수 있는 블로그 커뮤니티 프로젝트의 Back-End 영역 입니다.\n(진행중)",
    image: "/images/blog-Nest.png",
    tags: [
      "Nest.js",
      "Passport.js",
      "JWT",
      "Swaggar",
      "TypeScript",
      "TypeORM",
      "MariaDB",
      "Express",
      "ESLint",
      "Git",
    ],
    github: "https://github.com/LKHcoding/Blog-NestJS",
    visit: "",
    notion:
      "https://www.notion.so/Blog-Project-4d0deabc42b741b18cd69bfe4f34c6d0",
    id: 1,
  },
  {
    title: "Youtube Clone",
    description:
      "[React.js + express + node.js + mongodb Youtube Clone 프로젝트]\nMERN Stack을 사용하여 전반적인 웹 풀스택을 익히고, 비디오 업로드를 위한 multer, 썸네일을 만들기 위한 fluent-ffmpeg, 드래그 앤 드롭을 통한 파일선택을 위한 react-dropzone 등 실제 사용될 수 있는 다양한 라이브러리들을 사용하여 구현 하였습니다.",
    image: "/images/youtube-clone.png",
    tags: [
      "Express.js",
      "React.js",
      "Moment.js",
      "Redux",
      "Redux-Thunk",
      "mongoose",
      "MongoDB",
      "JavaScript",
      "ESLint",
      "Git",
    ],
    github: "https://github.com/LKHcoding/ReactYoutube",
    visit: "",
    notion: "",
    id: 2,
  },
  {
    title: "Instagram Clone",
    description:
      "[Web Instagram Clone 팀 프로젝트]\n팀의 리더 및 발표자로 팀원간의 업무 및 스케줄을 조정하고, 전반적인 기능에 모두 참여하였습니다. 로그인, 회원가입, 검색, 좋아요, 댓글, 각종 모달창 및 Feed, Explore, Profile, Chatting, Detail 페이지 구성 및 backend 기능 구현",
    image: "/images/instagram-clone-min.gif",
    // image: "/images/youtube-clone.png",
    tags: [
      "Java",
      "Html5",
      "Css3",
      "JavaScript",
      "jQuery",
      "Bootstrap",
      "Spring-Boot",
      "Sock.js",
      "Tomcat",
      "Thymeleaf",
      "Trello",
      "Mysql",
      "JPA",
      "Maven",
      "Git",
    ],
    github: "https://github.com/LKHcoding/SNS_Project_Springboot",
    visit: "http://insta.yi.or.kr/",
    notion: "",
    youtube: "https://www.youtube.com/watch?v=ptLInn3zmcI&feature=youtu.be",
    id: 3,
  },
  {
    title: "LeonStock",
    description:
      "[C# WPF 주식 자동매매 프로그램]\n키움증권 Open Api를 사용하여 조건검색식을 활용한 주식 자동매매 프로그램 LeonStock의 실제 자동매매가 이루어지는 모든 기능의 전반적인 영역을 담당 하였습니다.",
    image: "/images/leon-stock.png",
    tags: ["C#", "WPF", "MariaDB"],
    github: "",
    visit: "",
    notion: "",
    youtube: "https://www.youtube.com/watch?v=-imBubJoBXs",
    id: 4,
  },
];

export const TimeLineData = [
  { year: 2010, text: "영남대학교 정보통신공학과 (중퇴)" },
  // { year: 2017, text: "백제예술대학교 실용음학과 (졸업)" },
  { year: 2019, text: "C# 주식자동매매 프로그램 LeonStock 개발" },
  { year: 2020, text: "Java 웹 개발자 양성 과정 수료 (영남인재교육원)" },
  { year: 2021, text: "Front-End Web 개발 공부 진행 중" },
];
